name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: Install app dependencies
        run: go mod tidy

      - name: Build gateway
        run: go build -v ./cmd/gateway/main.go

      - name: Build cars service
        run: go build -v ./cmd/car/main.go

      - name: Build rental service
        run: go build -v ./cmd/car/main.go

      - name: Build payment service
        run: go build -v ./cmd/car/main.go

  delivery:
    name: Build Docker images
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU for Docker build
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push images
        timeout-minutes: 10
        run: PIPELINE_ID=${{ github.run_number }} docker compose build --push

  deploy:
    name: Deploy
    needs: [ delivery ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Copy docker-compose.yaml to production server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_PRIVATE_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          source: "docker-compose.yaml"
          target: /home/${{ PROD_USERNAME }}

      - name: Start app
        uses: appleboy/ssh-action@v1.0.3
        env:
          PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          key: ${{ secrets.PROD_PRIVATE_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          envs: PROD_USERNAME
          allenvs: true
          script: >-
            cd /home/$PROD_USERNAME &&
            docker compose pull &&
            docker compose up -d

#  deploy:
#    name: Autograding
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - uses: docker/setup-buildx-action@v2
#
#      # TODO build and run unit tests
#
#      - name: Build images
#        timeout-minutes: 10
#        run: PIPELINE_ID=${{ github.run_number }} docker compose build
#
#      - name: Run containers
#        timeout-minutes: 5
#        run: |
#          docker compose up -d
#          ./scripts/wait-script.sh
#        env:
#          WAIT_PORTS: 8080,8070,8060,8050
#
#      - name: Run API Tests
#        uses: matt-ball/newman-action@master
#        with:
#          collection: postman/collection.json
#          environment: postman/environment.json
#          delayRequest: 100
#          reporters: '[ "cli" ]'
#
#      - uses: education/autograding@v1
#        id: autograder
#        continue-on-error: true
#
#      - name: Github auto grader mark
#        uses: Romanow/google-sheet-autograder-marker@v1.0
#        with:
#          google_token: ${{secrets.GOOGLE_API_KEY}}
#          sheet_id: "1xkgjUX6Qmk7rdJG-QPOToav-HWWtthJjnShIKnw3oIY"
#          homework_number: 2
#          user_column: 'D'
#          column_offset: 'F'
#          mark: "'+"
#
#      - name: Stop containers
#        if: always()
#        continue-on-error: true
#        run: docker compose down -v